{"version":3,"file":"static/js/7730.6260e808.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","Layouts/Main/MyAssets/Components/Pagination/index.js"],"sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  disabled,\n  className,\n  style,\n  activeLabel,\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import React, { useEffect } from \"react\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport PropTypes from \"prop-types\";\n\nconst PaginationComponent = ({\n    itemsCount,\n    itemsPerPage,\n    currentPage,\n    setCurrentPage,\n    alwaysShown = true\n}) => {\n    const pagesCount = Math.ceil(itemsCount / itemsPerPage);\n    const isPaginationShown = alwaysShown ? true : pagesCount > 1;\n    const isCurrentPageFirst = currentPage === 1;\n    const isCurrentPageLast = currentPage === pagesCount;\n\n    const changePage = number => {\n        if (currentPage === number) return;\n        setCurrentPage(number);\n    };\n\n    const onPageNumberClick = pageNumber => {\n        changePage(pageNumber);\n    };\n\n    const onPreviousPageClick = () => {\n        changePage(currentPage => currentPage - 1);\n    };\n\n    const onNextPageClick = () => {\n        changePage(currentPage => currentPage + 1);\n    };\n\n    const setLastPageAsCurrent = () => {\n        if (currentPage > pagesCount) {\n            setCurrentPage(pagesCount);\n        }\n    };\n\n    let isPageNumberOutOfRange;\n\n    const pageNumbers = [...new Array(pagesCount)].map((_, index) => {\n        const pageNumber = index + 1;\n        const isPageNumberFirst = pageNumber === 1;\n        const isPageNumberLast = pageNumber === pagesCount;\n        const isCurrentPageWithinTwoPageNumbers =\n            Math.abs(pageNumber - currentPage) <= 2;\n\n        if (\n            isPageNumberFirst ||\n            isPageNumberLast ||\n            isCurrentPageWithinTwoPageNumbers\n        ) {\n            isPageNumberOutOfRange = false;\n            return (\n                <Pagination.Item\n                    key={pageNumber}\n                    onClick={() => onPageNumberClick(pageNumber)}\n                    active={pageNumber === currentPage}\n                >\n                    {pageNumber}\n                </Pagination.Item>\n            );\n        }\n\n        if (!isPageNumberOutOfRange) {\n            isPageNumberOutOfRange = true;\n            return <Pagination.Ellipsis key={pageNumber} className=\"muted\" />;\n        }\n\n        return null;\n    });\n\n    useEffect(setLastPageAsCurrent, [pagesCount]);\n\n    return (\n        <>\n            {isPaginationShown && (\n                <Pagination>\n                    <Pagination.Prev\n                        onClick={onPreviousPageClick}\n                        disabled={isCurrentPageFirst}\n                    />\n                    {pageNumbers}\n                    <Pagination.Next\n                        onClick={onNextPageClick}\n                        disabled={isCurrentPageLast}\n                    />\n                </Pagination>\n            )}\n        </>\n    );\n};\n\nPaginationComponent.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    setCurrentPage: PropTypes.func.isRequired,\n    alwaysShown: PropTypes.bool\n};\n\nexport default PaginationComponent;\n"],"names":["PageItem","React","ref","active","disabled","className","style","activeLabel","children","props","Component","Anchor","_jsx","classNames","_jsxs","defaultProps","displayName","createButton","name","defaultValue","label","Button","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","Object","assign","Item","isPageNumberOutOfRange","itemsCount","itemsPerPage","currentPage","setCurrentPage","alwaysShown","pagesCount","Math","ceil","isPaginationShown","isCurrentPageFirst","isCurrentPageLast","changePage","number","pageNumbers","Array","map","_","index","pageNumber","isPageNumberFirst","isPageNumberLast","isCurrentPageWithinTwoPageNumbers","abs","onClick","onPageNumberClick","useEffect"],"sourceRoot":""}