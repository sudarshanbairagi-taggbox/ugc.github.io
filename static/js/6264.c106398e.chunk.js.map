{"version":3,"file":"static/js/6264.c106398e.chunk.js","mappings":"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","sources":["Layouts/Main/Shoppable/Components/AddProductModal.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Modal }  from 'react-bootstrap';\nimport Select from 'react-select';\nimport { currencyList } from '../../../../Services/Utils/utils';\n//import { baseUrl } from '../../../../Assets/AssetsHelper';\n\nclass AddProductModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // descriptionEditable : false,\n            // addTagButton : true,\n            //tagInputValue : ''\n        };\n    }\n    addTagValue = (value) => {\n        //console.log('value', value);\n    }\n\n    handleClose = () => {\n        this.props.handleAddProCallback(false)\n    };\n\n    render() {\n        const { addProModalToggle } = this.props\n        //const {tagString } = this.state\n\n        const currencyData = currencyList && currencyList.length > 0 ? currencyList.map((currency) =>\n        ({ \n            value: currency.code, \n            label: <div className=\"csp_wrap\" title={currency.namePlural} data-abbreviation={currency.code} ><span>{currency.name} - {currency.symbolNative} </span></div> \n        })\n        ) : null\n        return <Modal show={addProModalToggle} onHide={this.handleClose}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>Add Product</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"addPro_modal mx-xl-4 px-0 px-lg-4 mx-0\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                    <div className=\"border rounded-3 h-100px\">\n                                        \n                                    </div>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <div className=\"mb-2 mb-xl-3\">\n                                        <label className=\"text-muted mb-1\">Product Name</label>\n                                        <input type=\"text\" name=\"pname\" className=\"form-control\" placeholder=\"Enter Product Name\"/>\n                                    </div>\n                                    <div className=\"row mb-2 mb-xl-3\">\n                                        <div className=\"col\">\n                                            <label className=\"text-muted mb-1\">Price</label>\n                                            <div className=\"input-group\">\n                                                <span className=\"input-group-text p-0\">\n                                                    <Select id=\"\" className=\"selectpicker countrypicker\" \n                                                    classNamePrefix=\"ugc\"\n                                                    //defaultValue={currencyData[97]}\n                                                    isLoading={false}\n                                                    isClearable={false}\n                                                    isSearchable={false}\n                                                    name=\"country\"\n                                                    options={currencyData} />\n                                                </span>\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"$0.00\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"col\">\n                                            <label className=\"text-muted mb-1\">Discount Price</label>\n                                            <div className=\"input-group\">\n                                                <span className=\"input-group-text\">$</span>\n                                                <input type=\"text\" className=\"form-control\" placeholder=\"$0.00\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"mb-2 mb-xl-3\">\n                                        <label className=\"text-muted mb-1\">Product URL</label>\n                                        <input type=\"text\" name=\"pname\" className=\"form-control\" placeholder=\"https://www.website.com\"/>\n                                    </div>\n                                    <div className=\"row mb-2 mb-xl-3\">\n                                        <div className=\"col\">\n                                            <label className=\"text-muted mb-1\">Product SKU</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter product sku\" />\n                                        </div>\n                                        <div className=\"col\">\n                                            <label className=\"text-muted mb-1\">Product Id</label>\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter product Id\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"mb-2 mb-xl-3\">\n                                        <label className=\"text-muted mb-1\">Category</label>\n                                        <input type=\"text\" name=\"pname\" className=\"form-control\" placeholder=\"Category Name\"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer className=\"p-3\">\n                        <div className=\"mx-xl-4 px-2 px-lg-4 mx-0\">\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm btn-min-w me-3\" onClick={this.handleClose}>Cancel</button>\n                            <button type=\"button\" className=\"btn btn-primary btn-sm btn-min-w\">Submit</button>\n                        </div>\n                    </Modal.Footer>\n                </Modal>\n\n    }\n}\n\nexport default AddProductModal;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["AddProductModal","props","addTagValue","value","handleClose","handleAddProCallback","state","addProModalToggle","this","currencyData","currencyList","currency","code","label","className","title","namePlural","name","symbolNative","show","onHide","size","centered","closeButton","type","placeholder","id","classNamePrefix","isLoading","isClearable","isSearchable","options","onClick","Component","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","createWithBsPrefix","ModalDialog","React","ref","bsPrefix","contentClassName","fullscreen","children","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","_jsx","classNames","displayName","ModalHeader","AbstractModalHeader","defaultProps","closeLabel","DivStyledAsH4","divWithClassName","backdrop","keyboard","autoFocus","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","onEscapeKeyDown","onShow","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","useState","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","useRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","window","current","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","BaseModal","preventDefault","isAppearing","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onMouseUp","onMouseDown","Object","assign","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}